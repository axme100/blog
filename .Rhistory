options(servr.daemon = TRUE)
blogdown::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::update_meta_addin()
```{r}
library(dplyr)
library(stringr)
library(readxl)
library(ggplot2)
file.list <- list.files(path = "datos_originales/", pattern='*.xlsx')
file.list.new <- paste("datos_originales/", file.list, sep="")
df.list <- lapply(file.list.new, read_excel)
# Combine this into a data frame
df <- bind_rows(df.list)
# Some of the sheets had the cd column in a different order that's why we got cd one and cd two
colnames(df) <- c("izq","palabra","cd","der","cd2","encode","cd3")
# Rearrange columns
# Encode looks to be a repition of a cd column so don't select it
df <- df %>%
select(izq, palabra, cd, cd2, cd3, der)
# Get a logical vector where the cd column is null
my.na <- is.na(df$cd)
# For those cases where cd column is null replace it with the cd2 column
df$cd[my.na] <- df$cd2[my.na]
# Repeat the same two steps above, now, where the cd column is STILL null replace it with cd3
my.na <- is.na(df$cd)
df$cd[my.na] <- df$cd3[my.na]
# Subset
df <- df %>%
select(izq, palabra, cd, der)
# Cordance line to test function below
customRecode <- function(concordanceLine) {
# Using the stringr package which is part of the tidy verse find all the
# occurences of periods in the string
listOfPeriods <- str_locate_all(concordanceLine, "\\.")
# Get the length of the list of periods
getIndex <- length(listOfPeriods[[1]])
# If there isn't a last period then just retrun the string how it is
if (getIndex > 0) {
# Use this length to pull the index of the period in the string
indexOfLastPeriod <- listOfPeriods[[1]][getIndex]
# Extract everything to the right of this string + 2 spaces
newString <- str_sub(concordanceLine, start = indexOfLastPeriod + 2)
} else {
newString <- concordanceLine
}
return(newString)
}
df$izqNew <- mapply(customRecode, df$izq)
df <- df %>%
select(izq, izqNew, palabra, cd, der)
# See documetation below, part of tidyverse, it looks like you can specficy
# columns or just pass in an entire data frame, I assume when you pass in an entire data frame
# every single row has to be the same
# http://www.datasciencemadesimple.com/remove-duplicate-rows-r-using-dplyr-distinct-function/
# https://www.rdocumentation.org/packages/dplyr/versions/0.7.6/topics/distinct
df <- distinct(df)
# Get the top 10
df %>%
count(palabra) %>%
arrange(desc(n)) %>%
top_n(10, n) %>%
# See the reorder() solution
# https://stackoverflow.com/questions/25664007/reorder-bars-in-geom-bar-ggplot2/25664367
ggplot(aes(x = reorder(palabra, -n), y = n)) +
geom_bar(stat="identity") +
theme(text = element_text(size=20), axis.text.x = element_text(angle = 90)) +
ggtitle("Top 10")
counts_of_df <- df %>%
count(palabra) %>%
arrange(desc(n))
# A Bit redundant, but it appears this package has to be used
# to write an excel file, other packages are problematic and rely
# and java dependencies.
# See here https://github.com/tidyverse/readxl/issues/231
library(openxlsx)
# Write the data as an xlsx file to the working directory
# The Tidyverse doesn't appear to have a writexl equivelant
openxlsx::write.xlsx(df, file = "datos.xlsx")
openxlsx::write.xlsx(counts_of_df, file = "conteo.xlsx")
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
library(dplyr)
library(stringr)
library(readxl)
library(ggplot2)
library(dplyr)
library(stringr)
library(readxl)
library(ggplot2)
library(dplyr)
library(stringr)
library(readxl)
library(ggplot2)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
options(servr.daemon = TRUE)
http://127.0.0.1:4321/
blogdown::serve_site()
options(servr.daemon = TRUE)
blogdown::serve_site()
options(servr.daemon = TRUE)
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown::serve_site()
